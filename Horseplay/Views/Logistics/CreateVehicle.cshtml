@model Horseplay.ViewModels.VehicleViewModel
@using Horseplay.Static

<br />
<br />
    @using (Html.BeginForm()) 
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal">
            <h4>Tworzenie pojazdu</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="my-row">
                @Html.LabelFor(model => model.Vehicle.Plate, htmlAttributes: new { @class = "control-label my-label" })
                <div class="my-input">
                    @Html.EditorFor(model => model.Vehicle.Plate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Vehicle.Plate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="my-row">
                @Html.LabelFor(model => model.Vehicle.Type, htmlAttributes: new { @class = "control-label my-label" })
                <div class="my-input">
                    @Html.DropDownListFor(model => model.Vehicle.Type, Model.VehicleTypes(0), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Vehicle.Type, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="my-row">
                @Html.LabelFor(model => model.Vehicle.Brand, htmlAttributes: new { @class = "control-label my-label" })
                <div class="my-input">
                    @Html.EditorFor(model => model.Vehicle.Brand, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Vehicle.Brand, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="my-row">
                @Html.LabelFor(model => model.Vehicle.Model, htmlAttributes: new { @class = "control-label my-label" })
                <div class="my-input">
                    @Html.EditorFor(model => model.Vehicle.Model, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Vehicle.Model, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="my-row">
                @Html.LabelFor(model => model.Vehicle.ProductionYear, htmlAttributes: new { @class = "control-label my-label" })
                <div class="my-input">
                    @Html.EditorFor(model => model.Vehicle.ProductionYear, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Vehicle.ProductionYear, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="my-row">
                @Html.LabelFor(model => model.Vehicle.Vin, htmlAttributes: new { @class = "control-label my-label" })
                <div class="my-input">
                    @Html.EditorFor(model => model.Vehicle.Vin, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Vehicle.Vin, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="my-row">
                @Html.LabelFor(model => model.Vehicle.Capacity, htmlAttributes: new { @class = "control-label my-label" })
                <div class="my-input">
                    @Html.EditorFor(model => model.Vehicle.Capacity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Vehicle.Capacity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="my-row">
                @Html.LabelFor(model => model.Vehicle.RegistrationDate, htmlAttributes: new { @class = "control-label my-label" })
                <div class="my-input">
                    @Html.TextBoxFor(model => model.Vehicle.RegistrationDate, new { @class = "form-control", @type = "date" })
                    @Html.ValidationMessageFor(model => model.Vehicle.RegistrationDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="my-row">
                @Html.LabelFor(model => model.Vehicle.ServiceDate, htmlAttributes: new { @class = "control-label my-label" })
                <div class="my-input">
                    @Html.TextBoxFor(model => model.Vehicle.ServiceDate, new { @class = "form-control", @type = "date" })
                    @Html.ValidationMessageFor(model => model.Vehicle.ServiceDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="my-row">
                @Html.LabelFor(model => model.Vehicle.DefaultUser, htmlAttributes: new { @class = "control-label my-label" })
                <div class="my-input">
                    @Html.DropDownListFor(model => model.SelectedUser, new SelectList(Model.Employees, "EmployeeId", "FullName"), "Wybierz", new { @class = "form-control", id = "dd-primary-driver" })
                    @Html.ValidationMessageFor(model => model.Vehicle.DefaultUser, "", new { @class = "text-danger" })
                </div>
                @{
                    string str = "";
                    if (!Model.Employees.Any())
                    {
                        HtmlString al = Html.ActionLink("dodaj pracownika", "CreateEmployee", "HR");
                        str = "Wygląda na to, że nie dodałeś jeszcze żadnego pracownika, którego mógłbyś przypisać jako domyślnego użytkownika.</br>Najpierw " + al + " a on pojawi się tutaj po odświeżeniu strony!";
                    }
                    else
                    {
                        HtmlString al = Html.ActionLink("tutaj", "GetEmployees", "HR");
                        str = "Wybierz pracownika z rozwijanej listy obok.</br>Jeśli potrzebujesz dodać pracownika lub zmienić jego dane, możesz zrobić to " + al + ".";
                    }
                    @CustomHelper.CreatePrompter(str, "purple");
                }
            </div>
            
            <div class="my-row">
                @Html.LabelFor(model => model.Vehicle.Description, htmlAttributes: new { @class = "control-label my-label" })
                <div class="my-input">
                    @Html.EditorFor(model => model.Vehicle.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Vehicle.Description, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Utwórz" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    
    <div>
        @Html.ActionLink("Powrót do listy pojazdów", "GetVehicles")
    </div>
